##############################################################################
#                                                                            #
# Network Service Interface Distributed Document Service                     #
#                                                                            #
##############################################################################
nsi-dds:
  enabled: true
  replicaCount: 1
  
  image:
    registry: docker.io
    repository: hnstrmprt/nsi-dds
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "1.0.27"
    home: "/nsi-dds"
  
  ports:
    name: "nsi-dds-api"
    containerPort: 8401
    protocol: "TCP"
  
  probe:
    scheme: "HTTPS"
    path: "/dds/portal"
    initialDelaySeconds: 0
    startupProbe:
      failureThreshold: 100
      periodSeconds: 3
  
  service:
    type: ClusterIP
    port: 80
    internalHttpsPort: 8401
  
  config:
    name: "nsi-dds-config"
    mountPath: "/config"
    configFilesGlob: "config/*"
  
  cache:
    name: "nsi-dds-cache"
    mountPath: "/cache"
    storage: "1Gi"

  resources:
    requests:
      memory: 0.5Gi
      cpu: 100m
    limits:
      memory: 1.5Gi
      cpu: 1000m

  #affinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: node.kubernetes.io/instance-type
  #          operator: In
  #          values:
  #          - Standard_DS2_v2

##############################################################################
#                                                                            #
# Network Service Interface Patch Computation Element                        #
#                                                                            #
##############################################################################
nsi-pce:
  enabled: true

  replicaCount: 1
  
  image:
    registrey: docker.io
    repository: hnstrmprt/nsi-pce
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "2.0.4"
    home: "/nsi-pce"
  
  ports:
    name: "nsi-pce-api"
    containerPort: 8080
    protocol: "TCP"
  
  service:
    type: ClusterIP
    port: 80
  
  config:
    name: "nsi-pce-config"
    mountPath: "/nsi-pce/config"
    configFilesGlob: "config/*"

  resources:
    requests:
      memory: 5Gi
      cpu: 100m
    limits:
      memory: 10Gi
      cpu: 1000m

  #affinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: node.kubernetes.io/instance-type
  #          operator: In
  #          values:
  #          - Standard_DS2_v2

##############################################################################
#                                                                            #
# Network Service Interface Safnari Aggregator                               #
#                                                                            #
##############################################################################
nsi-safnari:
  enabled: true
  
  replicaCount: 1
  
  image:
    registry: docker.io
    repository: hnstrmprt/nsi-safnari
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "2.1.3.3"
  
  ports:
    name: "nsi-safnari-api"
    containerPort: 8080
    probePort: 8080
    protocol: "TCP"
  
  service:
    type: ClusterIP
    port: 80
  
  config:
    name: "nsi-safnari-config"
    mountPath: "/config"
    configFilesGlob: "config/*"
  
  postgresql:
    postgresqlUsername: nsi-safnari-user
    postgresqlPassword: password
    postgresqlDatabase: nsi-safnari
    image:
      tag: 9.6.21
    persistence:
      size: 1Gi
    resources:
      requests:
        memory: 0.25Gi
        cpu: 100m
      limits:
        memory: 0.50Gi
        cpu: 1000m
    volumePermissions:
      enabled: true

  resources:
    requests:
      memory: 0.4Gi
      cpu: 100m
    limits:
      memory: 0.6Gi
      cpu: 1000m

  #affinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: node.kubernetes.io/instance-type
  #          operator: In
  #          values:
  #          - Standard_DS2_v2

##############################################################################
#                                                                            #
# Network Service Interface envoy front-end proxy                            #
#                                                                            #
##############################################################################
nsi-envoy:
  enabled: true

  replicaCount: 1
  
  image:
    repository: hnstrmprt/nsi-envoy
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "1.17.4"
  
  ports:
    name: "nsi-envoy"
    containerPort: 8080
    probePort: 8081
    protocol: "TCP"
  
  service:
    #type: LoadBalancer
    type: ClusterIP
    port: 443
    #ipAddress: ""
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: haproxy
      haproxy.kubernetes.io/ssl-passthrough: "true"
      #kubernetes.io/tls-acme: "true"
    hosts:
      - host: dds.nsi.nrp-nautilus.io
        paths:
        - path: /
          backend:
            serviceName: nsi-node-nsi-envoy
            servicePort: 443
      - host: safnari.nsi.nrp-nautilus.io
        paths:
        - path: /
          backend:
            serviceName: nsi-node-nsi-envoy
            servicePort: 443
    tls:
      - hosts:
          - dds.nsi.nrp-nautilus.io
          - safnari.nsi.nrp-nautilus.io
        #secretName: nsi-tls
  
  config:
    name: "nsi-envoy-config"
    mountPath: "/opt/bitnami/envoy/conf"
    configFilesGlob: "config/*"

  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 1000m

  #affinity:
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: node.kubernetes.io/instance-type
  #          operator: In
  #          values:
  #          - Standard_DS2_v2
