apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nsi-dds.fullname" . }}
  labels:
    {{- include "nsi-dds.labels" . | nindent 4 }}
spec:
  serviceName: {{ .Chart.Name }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nsi-dds.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nsi-dds.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nsi-dds.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["java"]
          args: ["-Xmx1536m", 
#                 "-Djavax.net.debug=all",
                 "-Djava.net.preferIPv4Stack=true",
                 "-Dcom.sun.xml.bind.v2.runtime.JAXBContextImpl.fastBoot=true",
#                 "-Dhttps.protocols=TLSv1.2",
#                 "-Dhttps.cipherSuites=SSL_RSA_WITH_DES_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA",
#                 "-Djavax.net.ssl.keyStoreType=jks",
#                 "-Djavax.net.ssl.keyStorePassword=secret",
#                 {{ printf "-Djavax.net.ssl.keyStore=%s/nsi-dds-keystore.jks" .Values.config.mountPath | quote }},
#                 "-Djavax.net.ssl.trustStoreType=jks",
#                 "-Djavax.net.ssl.trustStorePassword=secret",
#                 {{ printf "-Djavax.net.ssl.trustStore=%s/nsi-dds-truststore.jks" .Values.config.mountPath | quote }},
                 {{ printf "-Djava.util.logging.config.file=%s/logging.properties" .Values.config.mountPath | quote }},
                 {{ printf "-Dlog4j.configurationFile=%s/log4j.xml" .Values.config.mountPath | quote }},
                 {{ printf "-Dbasedir=%s" .Values.image.home | quote }},
                 "-jar", {{ printf "%s/dds.jar" .Values.image.home | quote }},
                 "-ddsConfigFile", {{ printf "%s/dds.xml" .Values.config.mountPath | quote }}]
          volumeMounts:
            - name: {{ .Values.config.name }}
              mountPath: {{ .Values.config.mountPath }}
              readOnly: true
            - name: {{ .Values.cache.name }}
              mountPath: {{ .Values.cache.mountPath }}
          ports:
            - name: {{ .Values.ports.name }}
              containerPort: {{ .Values.ports.containerPort }}
              protocol: {{ .Values.ports.protocol }}
#          livenessProbe:
#            httpGet:
#              scheme: {{ .Values.probe.scheme }}
#              path: {{ .Values.probe.path }}
#              port: {{ .Values.ports.containerPort }}
#            initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
#          readinessProbe:
#            httpGet:
#              scheme: {{ .Values.probe.scheme }}
#              path: {{ .Values.probe.path }}
#              port: {{ .Values.ports.containerPort }}
#            initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
#          startupProbe:
#            httpGet:
#              scheme: {{ .Values.probe.scheme }}
#              path: {{ .Values.probe.path }}
#              port: {{ .Values.ports.containerPort }}
#            failureThreshold: {{ .Values.probe.startupProbe.failureThreshold }}
#            periodSeconds: {{ .Values.probe.startupProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: {{ .Values.config.name }}
          configMap:
            name: {{ .Values.config.name }}
        - name: {{ .Values.cache.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.cache.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
