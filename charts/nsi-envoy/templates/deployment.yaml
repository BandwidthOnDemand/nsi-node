apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nsi-envoy.fullname" . }}
  labels:
    {{- include "nsi-envoy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nsi-envoy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/envoy: {{ .Files.Get "config/envoy.yaml" | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nsi-envoy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nsi-envoy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/opt/bitnami/envoy/bin/envoy" 
          args:
            - "-c"
            - "/opt/bitnami/envoy/conf/envoy.yaml"
#            - "--log-level"
#            - "debug"
          volumeMounts:
            - name: {{ .Values.config.name }}
              mountPath: {{ .Values.config.mountPath }}
              readOnly: true
          ports:
            - name: {{ .Values.ports.name }}
              containerPort: {{ .Values.ports.containerPort }}
              protocol: {{ .Values.ports.protocol }}
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: {{ .Values.ports.probePort }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: {{ .Values.ports.probePort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ .Values.config.name }}
          configMap:
            name: {{ .Values.config.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
