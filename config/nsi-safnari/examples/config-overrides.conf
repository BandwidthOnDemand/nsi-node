include "application.conf"

db.default.url = "jdbc:postgresql://nsi-node-postgresql.nsi.svc.cluster.local/nsi-safnari"
db.default.password = "password"

application.secret = ${SAFNARI_APPLICATION_SECRET}

safnari {
  nsa {
    id = "urn:ogf:network:safnari.netherlight.net:2013:nsa:safnari"
    name = "Test Safnari"
  }
  network = null
  dds {
      url = "https://agg.netherlight.net/dds"
  }
  peersWith = [
      { id = "urn:ogf:network:dev.automation.surf.net:2017:nsa", dn = "/C=NL/O=SURF/OU=network services/CN=opennsa.dev.automation.surf.net" },
      { id = "urn:ogf:network:staging.automation.surf.net:2017:nsa", dn = "/C=NL/O=SURF/OU=network services/CN=opennsa.staging.automation.surf.net" },
      { id = "urn:ogf:network:surf.nl:2020:nsa", dn = "/C=NL/O=SURF/OU=network services/CN=opennsa.automation.surf.net" },
      { id = "urn:ogf:network:surf.nl:2020:onsaclient", dn = "/C=NL/O=SURF/OU=network services/CN=onsaclient.automation.surf.net" },
  ]
  async.reply.timeout = 120 seconds
  connection.expiration.time = 1 day
}

pce {
  actor = real
  endpoint = "http://nsi-node-nsi-pce.hanst.svc.cluster.local:80"
  algorithm = sequential
}

nsi {
  actor = real
  base.url = "https://safnari.dlp.surfnet.nl"
  twoway.tls = false
  tlsmap = {
  }
}
