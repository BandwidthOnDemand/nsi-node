---
##############################################################################
#                                                                            #
# Network Service Interface Distributed Document Service                     #
#                                                                            #
##############################################################################
nsi-dds:
  enabled: true

  # podAnnotations:
  #   linkerd.io/inject: disabled

  image:
    repository: ghcr.io/bandwidthondemand/nsi-dds
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "1.1.0.2"
    home: "/nsi-dds"

  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 5

  livenessProbe:
    enabled: false
    failureThreshold: 5
    periodSeconds: 6
    timeoutSeconds: 5

  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.  If not set and create is true, a
    # name is generated using the fullname template
    name: ""

  service:
    name: nsi-dds
    port: 80
    containerPort: 8401
    type: ClusterIP
    # type: LoadBalancer
    # ipAddress: 145.101.126.224
    # annotations:
    #   service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: front.example.domain
        paths:
          - path: "/nsi-dds/(.*)"
    tls:
      - secretName: tls-secret-api
        hosts:
          - front.example.domain

  resources:
    requests:
      memory: 0.5Gi
      cpu: 100m
    limits:
      memory: 1.5Gi
      cpu: 1000m

  cache:
    storage: "1Gi"

  config:
    name: "config"

##############################################################################
#                                                                            #
# Network Service Interface Patch Computation Element                        #
#                                                                            #
##############################################################################
nsi-pce:
  enabled: true

  # podAnnotations:
  #   linkerd.io/inject: disabled

  image:
    repository: ghcr.io/bandwidthondemand/nsi-pce
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "2.0.5"
    home: "/nsi-pce"

  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 5

  livenessProbe:
    enabled: false
    failureThreshold: 5
    periodSeconds: 6
    timeoutSeconds: 5

  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.  If not set and create is true, a
    # name is generated using the fullname template
    name: ""

  service:
    name: nsi-pce
    port: 80
    containerPort: 8080
    # configure either ClusterIP or LoadBalancer + ipAddress
    type: ClusterIP
    # type: LoadBalancer
    # ipAddress: 1.2.3.4
    # annotations:
    #   service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            backend:
              serviceName: chart-example.local
              servicePort: 80
    tls:
      - secretName: chart-example-tls
        hosts:
          - chart-example.local

  resources:
    requests:
      memory: 5Gi
      cpu: 100m
    limits:
      memory: 10Gi
      cpu: 1000m

  config:
    name: "config"
    mountPath: "/nsi-pce/config"
    configFilesGlob: "config/*"

##############################################################################
#                                                                            #
# Network Service Interface Safnari Aggregator                               #
#                                                                            #
##############################################################################
nsi-safnari:
  enabled: true

  # podAnnotations:
  #   linkerd.io/inject: disabled

  image:
    repository: ghcr.io/bandwidthondemand/nsi-safnari
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "2.1.3.5"

  startupProbe:
    enabled: true
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 5

  livenessProbe:
    enabled: true
    failureThreshold: 5
    periodSeconds: 6
    timeoutSeconds: 5

  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.  If not set and create is true, a
    # name is generated using the fullname template
    name: ""

  service:
    name: "nsi-safnari"
    port: 80
    containerPort: 8080
    # configure either ClusterIP or LoadBalancer + ipAddress
    type: ClusterIP
    # type: LoadBalancer
    # ipAddress: 1.2.3.4
    # annotations:
    #   service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            backend:
              serviceName: chart-example.local
              servicePort: 80
  tls:
    - secretName: chart-example-tls
      hosts:
        - chart-example.local

  resources:
    requests:
      memory: 0.4Gi
      cpu: 100m
    limits:
      memory: 0.6Gi
      cpu: 1000m

  config:
    name: "config"
    mountPath: "/config"
    configFilesGlob: "config/*"

  postgresql:
    enabled: false

##############################################################################
#                                                                            #
# Network Service Interface envoy front-end proxy                            #
#                                                                            #
##############################################################################
nsi-envoy:
  enabled: true

  # podAnnotations:
  #   linkerd.io/inject: disabled

  replicaCount: 1

  image:
    repository: ghcr.io/bandwidthondemand/nsi-envoy
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "1.17.5"

  livenessProbe:
    enabled: false
    port: 8081

  readinessProbe:
    enabled: false
    port: 8081

  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.  If not set and create is true, a
    # name is generated using the fullname template
    name: ""

  service:
    # type: ClusterIP
    type: LoadBalancer
    ipAddress: "1.2.3.4"
    port: 443
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: haproxy
      haproxy.kubernetes.io/ssl-passthrough: "true"
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: dds.example.domain
        paths:
          - path: /
            backend:
              serviceName: nsi-node-nsi-envoy
              servicePort: 443
      - host: safnari.example.domain
        paths:
          - path: /
            backend:
              serviceName: nsi-node-nsi-envoy
              servicePort: 443
    tls:
      - hosts:
          - dds.example.domain
          - safnari.example.domain
        secretName: nsi-tls

  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 1000m

  config:
    name: "config"
    mountPath: "/opt/bitnami/envoy/conf"
    configFilesGlob: "config/*"

##############################################################################
#                                                                            #
# NorduNet's OpenNSA                                                         #
#                                                                            #
##############################################################################
nsi-opennsa:
  enabled: true

  # podAnnotations:
  #   linkerd.io/inject: disabled

  image:
    repository: ghcr.io/bandwidthondemand/nsi-opennsa
    pullPolicy: IfNotPresent
    # tag 0verrides the image tag whose default is the chart appVersion.
    tag: "3.0.1.10"

  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 5

  livenessProbe:
    enabled: false
    failureThreshold: 5
    periodSeconds: 6
    timeoutSeconds: 5

  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.  If not set and create is true, a
    # name is generated using the fullname template
    name: ""

  service:
    name: "nsi-opennsa"
    port: 80
    containerPort: 8080
    # configure either ClusterIP or LoadBalancer + ipAddress
    type: ClusterIP
    # type: LoadBalancer
    # ipAddress: 1.2.3.4
    # annotations:
    #   service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            backend:
              serviceName: chart-example.local
              servicePort: 80
    tls:
      - secretName: chart-example-tls
        hosts:
          - chart-example.local

  resources:
    limits:
      cpu: 1000m
      memory: 100Mi
    requests:
      cpu: 10m
      memory: 50Mi

  postgresql:
    enabled: false

  config:
    name: "config"
    mountPath: "/config"
    filesGlob: "config/*"

  certificates:
    name: "certificates"
    mountPath: "/certificates"
    filesGlob: "certificates/*"

  backends:
    enabled: true
    name: "backends"
    mountPath: "/backends"
    filesGlob: "backends/*"

##############################################################################
#                                                                            #
# PostgreSQL                                                                 #
#                                                                            #
##############################################################################
postgresql:
  enabled: true

  # master:
  #   podAnnotations:
  #     linkerd.io/inject: disabled

  image:
    tag: 9.6.21
    debug: true

  postgresqlUsername: nsi-node-user
  postgresqlPassword: ""

  persistence:
    size: 1Gi
  resources:
    requests:
      memory: 500Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 1000m
  volumePermissions:
    enabled: true
