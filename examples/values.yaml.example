##############################################################################
#                                                                            #
# Network Service Interface Distributed Document Service                     #
#                                                                            #
##############################################################################
nsi-dds:
  enabled: true
  
  image:
    repository: ghcr.io/bandwidthondemand/nsi-dds
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "1.2.0-1"
    home: "/nsi-dds"

  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 5

  livenessProbe:
    enabled: false
    failureThreshold: 5
    periodSeconds: 6
    timeoutSeconds: 5
  
  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  service:
    name: nsi-dds
    port: 80
    containerPort: 8401
    type: ClusterIP
  #  type: LoadBalancer
  #  ipAddress: a.b.c.d
  #  annotations:
  #    service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: front.example.domain
        paths:
          - path: "/nsi-dds/(.*)"
    tls:
      - secretName: tls-secret-api
        hosts:
          - front.example.domain
  
  resources:
    requests:
      memory: 0.5Gi
      cpu: 100m
    limits:
      memory: 1.5Gi
      cpu: 1000m

  cache:
    storage: "1Gi"

##############################################################################
#                                                                            #
# Network Service Interface Patch Computation Element                        #
#                                                                            #
##############################################################################
nsi-pce:
  enabled: true

  image:
    repository: ghcr.io/bandwidthondemand/nsi-pce
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "2.0-7"
    home: "/nsi-pce"
  
  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 5

  livenessProbe:
    enabled: false
    failureThreshold: 5
    periodSeconds: 6
    timeoutSeconds: 5
  
  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  service:
    name: nsi-pce
    port: 80
    containerPort: 8080
  # configure either ClusterIP or LoadBalancer + ipAddress
    type: ClusterIP
  #  type: LoadBalancer
  #  ipAddress: 1.2.3.4
  #  annotations:
  #    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
    tls:
      - secretName: chart-example-tls
        hosts:
          - chart-example.local

  resources:
    requests:
      memory: 5Gi
      cpu: 100m
    limits:
      memory: 10Gi
      cpu: 1000m

  config:
    name: "nsi-pce-config"
    mountPath: "/nsi-pce/config"
    configFilesGlob: "config/*"

##############################################################################
#                                                                            #
# Network Service Interface Safnari Aggregator                               #
#                                                                            #
##############################################################################
nsi-safnari:
  enabled: true
  
  image:
    repository: ghcr.io/bandwidthondemand/nsi-safnari
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "2.2.3-1"
  
  startupProbe:
    enabled: true
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 5

  livenessProbe:
    enabled: true
    failureThreshold: 5
    periodSeconds: 6
    timeoutSeconds: 5

  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  service:
    name: "nsi-safnari"
    port: 80
    containerPort: 8080
  # configure either ClusterIP or LoadBalancer + ipAddress
    type: ClusterIP
  #  type: LoadBalancer
  #  ipAddress: 1.2.3.4
  #  annotations:
  #    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls:
    - secretName: chart-example-tls
      hosts:
        - chart-example.local

  resources:
    requests:
      memory: 0.4Gi
      cpu: 100m
    limits:
      memory: 0.6Gi
      cpu: 1000m

  postgresql:
    enabled: false

  config:
    name: "nsi-safnari-config"
    mountPath: "/config"
    configFilesGlob: "config/*"

##############################################################################
#                                                                            #
# Network Service Interface envoy front-end proxy                            #
#                                                                            #
##############################################################################
nsi-envoy:
  enabled: true

  replicaCount: 1
  
  image:
    repository: ghcr.io/bandwidthondemand/nsi-envoy
    pullPolicy: IfNotPresent
    # tag overrides the image tag whose default is the chart appVersion
    tag: "1.20.1-1"

  livenessProbe:
    enabled: true
    port: 8081

  readinessProbe:
    enabled: true
    port: 8081
  
  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  service:
    #type: ClusterIP
    type: LoadBalancer
    ipAddress: "a.b.c.d"
    port: 443
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: haproxy
      haproxy.kubernetes.io/ssl-passthrough: "true"
      #kubernetes.io/tls-acme: "true"
    hosts:
      - host: dds.example.domain
        paths:
        - path: /
          backend:
            serviceName: nsi-node-nsi-envoy
            servicePort: 443
      - host: safnari.example.domain
        paths:
        - path: /
          backend:
            serviceName: nsi-node-nsi-envoy
            servicePort: 443
    tls:
      - hosts:
          - dds.example.domain
          - safnari.example.domain
        #secretName: nsi-tls
  
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 1000m

  config:
    name: "nsi-envoy-config"
    mountPath: "/opt/bitnami/envoy/conf"
    configFilesGlob: "config/*"

##############################################################################
#                                                                            #
# NorduNet's OpenNSA                                                         #
#                                                                            #
##############################################################################
nsi-opennsa:
  enabled: false

  image:
    repository: ghcr.io/bandwidthondemand/nsi-opennsa
    tag: "3.0.2-1"

  postgresql:
    enabled: false

##############################################################################
#                                                                            #
# PostgreSQL                                                                 #
#                                                                            #
##############################################################################
postgresql:
  enabled: true
  auth:
    username: nsi-node-user
    password: ""
  primary:
    initdb:
      scriptsConfigMap: postgresql-init-scripts
  # postgresqlDatabase:
  #initdbScripts:
  #  createDBs.sql: |
  #    CREATE DATABASE "nsi-safnari";
  #    CREATE DATABASE "opennsa";
  #  opennsa.sql: |
  #    {{ .Files.Get "config/nsi-opennsa/templates/schema.sql" }}
  image:
    tag: 9.6.21
    debug: true
  persistence:
    size: 1Gi
  resources:
    requests:
      memory: 500Mi
  volumePermissions:
    enabled: true

##############################################################################
#                                                                            #
# nsi-requester                                                              #
#                                                                            #
##############################################################################
nsi-requester:
  enabled: false
##############################################################################
#                                                                            #
# SuPA                                                                       #
#                                                                            #
##############################################################################
supa:
  enabled: false
  image:
    repository: ghcr.io/workfloworchestrator/supa
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  
  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  podAnnotations: {}
  
  podSecurityContext: {}
    # fsGroup: 2000
  
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  
  service:
    type: ClusterIP
    port: 80  # supa:80 mapped to document_server_port (default 8080)
    grpc: 80  # supa-grpc:80 mapped to grpc_server_insecure_port (default 50051)
  
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  
  resources:
     limits:
       cpu: 1000m
       memory: 128Mi
     requests:
       cpu: 10m
       memory: 64Mi
  
  nodeSelector: {}
  
  tolerations: []
  
  affinity: {}
  
  persistence:
    enabled: true
    mountPath: /usr/local/var/db
    subPath:
    annotations: {}
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  
  config: |-
    supa.env: |-
      document_server_host=0.0.0.0
      document_server_port=8080
      grpc_server_insecure_host=0.0.0.0
      grpc_server_insecure_port=50051
      grpc_client_insecure_host=polynsi-grpc.nsi.svc.cluster.local
      grpc_client_insecure_port=80
      topology=topology
      domain=example.domain:2001
      log_level=INFO
      #backend=mybackend
    mybackend.env: |-
      #host=http://nrm.nsi.svc.cluster.local:80
      #oauth2_active=False
##############################################################################
#                                                                            #
# PolyNSI                                                                    #
#                                                                            #
##############################################################################
polynsi:
  enabled: false
  image:
    repository: ghcr.io/workfloworchestrator/polynsi
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  
  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""
  
  serviceAccount:
    create: false
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  podAnnotations: {}
  
  podSecurityContext: {}
    # fsGroup: 2000
  
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  
  service:
    type: ClusterIP
    port: 80  # polynsi:80 mapped to document_server_port (default 8080)
    grpc: 80  # polynsi-grpc:80 mapped to grpc_server_insecure_port (default 50051)
  
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  
  resources:
     limits:
       cpu: 1000m
       memory: 512Mi
     requests:
       cpu: 10m
       memory: 256Mi
  
  nodeSelector: {}
  
  tolerations: []
  
  affinity: {}
  
  persistence:
    enabled: false
    mountPath: /usr/local/var/db
    subPath:
    annotations: {}
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  
  config:
    # either read config files from folder or use inline data, filesGlob takes precedence over inline.
    filesGlob: "config/*"
    #inline: |-
    #  application.properties: |-
    #    debug=true
    #    cxf.path=/soap
    #    soap.server.connection_provider.path=/connection/provider
    #    soap.server.connection_requester.path=/connection/requester
    #    grpc.server.port=9090
    #    grpc.client.connection_provider.address=static://development-nsi-node-supa-grpc.nsi.svc.cluster.local:80
    #    grpc.client.connection_provider.negotiationType=PLAINTEXT
    #    soap.client.connection_requester.address=http://foo.bar.internal:666/deadend
